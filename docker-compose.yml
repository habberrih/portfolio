version: '3.8'

services:
  # Development (no proxy)
  dev:
    build:
      context: .
      target: development
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    command: npm run dev
    networks:
      - app-network

  # Production app (Next standalone)
  app:
    build:
      context: .
      target: production
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped

  # Nginx reverse proxy + TLS termination
  nginx:
    image: nginx:alpine
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/entrypoint.sh:/entrypoint.sh:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - app-network
    restart: unless-stopped
    command: ["/bin/sh", "/entrypoint.sh"]

  # Certbot for certificate issuance/renewal
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - app-network
    # Periodic renewal loop; for first issue run the init script
    entrypoint: /bin/sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"

networks:
  app-network:
    driver: bridge
